Функция парситьJsonВДерево(текстJson) Экспорт
	деревоJSON = Новый ДеревоЗначений;
	деревоJSON.Колонки.Добавить("ИмяПараметра", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(50));
	деревоJSON.Колонки.Добавить("ЗначениеПараметра", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(255));
	деревоJSON.Колонки.Добавить("ТипЗначенияПараметра", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(255));
	
	списокИндексовГраницИРазделителя = получитьСписокИндексовГраницИРазделителя(текстJson);
	Если НЕ валидацияJSON(списокИндексовГраницИРазделителя) Тогда
		Сообщить("Json не верен!", СтатусСообщения.Внимание);
		Возврат деревоJSON;
	КонецЕсли;
	
	текущаяСтрокаДерева = деревоJSON;
	начальныйЗнак = Неопределено;
	конечныйЗнак = Неопределено;
	имяАтрибута = "";
	Для каждого элементСписка Из списокИндексовГраницИРазделителя Цикл
		начальныйЗнак = конечныйЗнак;
		конечныйЗнак = элементСписка;
		
		Если КонечныйЗнак.Представление = "{" Тогда
			новаяСтрокаДерева = текущаяСтрокаДерева.Строки.Добавить();
			новаяСтрокаДерева.ИмяПараметра = имяАтрибута;
			имяАтрибута = "";
			новаяСтрокаДерева.ТипЗначенияПараметра = "Объект";
			текущаяСтрокаДерева = новаяСтрокаДерева;
		ИначеЕсли конечныйЗнак.Представление = "[" Тогда
			новаяСтрокаДерева = текущаяСтрокаДерева.Строки.Добавить();
			новаяСтрокаДерева.ИмяПараметра = имяАтрибута;
			имяАтрибута = "";
			новаяСтрокаДерева.ЗначениеПараметра = получитьЗначениеИзТекста(текстJson, начальныйЗнак, конечныйЗнак);
			новаяСтрокаДерева.ТипЗначенияПараметра = "Массив";
			текущаяСтрокаДерева = новаяСтрокаДерева;
		ИначеЕсли конечныйЗнак.Представление = ":" Тогда
			имяАтрибута = получитьЗначениеИзТекста(текстJson, начальныйЗнак, конечныйЗнак);
		ИначеЕсли начальныйЗнак.Представление = ":" Тогда
			новаяСтрокаДерева = текущаяСтрокаДерева.Строки.Добавить();
			новаяСтрокаДерева.ИмяПараметра = имяАтрибута;
			имяАтрибута = "";
			новаяСтрокаДерева.ЗначениеПараметра = получитьЗначениеИзТекста(текстJson, начальныйЗнак, конечныйЗнак);
			новаяСтрокаДерева.ТипЗначенияПараметра = "Элемент объекта";
			Если конечныйЗнак.Представление = "[" Тогда
				текущаяСтрокаДерева = новаяСтрокаДерева;
			КонецЕсли;
		//ivan начало 28.12.2017 13:50:34
		ИначеЕсли (начальныйЗнак.Представление = "[" ИЛИ начальныйЗнак.Представление = ",") И (конечныйЗнак.Представление = "," ИЛИ конечныйЗнак.Представление = "]") Тогда
			новаяСтрокаДерева = текущаяСтрокаДерева.Строки.Добавить();
			новаяСтрокаДерева.ИмяПараметра = имяАтрибута;
			новаяСтрокаДерева.ЗначениеПараметра = получитьЗначениеИзТекста(текстJson, начальныйЗнак, конечныйЗнак);
			новаяСтрокаДерева.ТипЗначенияПараметра = "Элемент массива";
		//ivan конец 28.12.2017 13:50:34
		
		//ivan начало 22.12.2017 11:40:28
		ИначеЕсли (начальныйЗнак.Представление = "]" И конечныйЗнак.Представление = ",") ИЛИ (начальныйЗнак.Представление = "}" И конечныйЗнак.Представление = ",") ИЛИ
			(начальныйЗнак.Представление = "}" И конечныйЗнак.Представление = "}") ИЛИ (начальныйЗнак.Представление = "]" И конечныйЗнак.Представление = "]") ИЛИ
			(начальныйЗнак.Представление = "]" И конечныйЗнак.Представление = "}") ИЛИ (начальныйЗнак.Представление = "}" И конечныйЗнак.Представление = "]") Тогда
			текущаяСтрокаДерева = текущаяСтрокаДерева.Родитель;
		//ivan конец 22.12.2017 11:40:28
		КонецЕсли;
	КонецЦикла;
	Возврат деревоJSON;
КонецФункции

Функция получитьЗначениеИзТекста(текстJson, начальныйЗнак, конечныйЗнак)
	результат = СокрЛП(Сред(текстJson, начальныйЗнак.Значение + 1, (конечныйЗнак.Значение - 1) - начальныйЗнак.Значение));
	Если Прав(результат, 1) = """" И Лев(результат, 1) = """" Тогда
		результат = Лев(результат, СтрДлина(результат) - 1);
		результат = Прав(результат, СтрДлина(результат) - 1);
	КонецЕсли;
	Возврат результат;
КонецФункции

Функция получитьСписокИндексовГраницИРазделителя(Знач текстJson)
	списокИндексовГраницИРазделителя = новый СписокЗначений;
	внутриСтроки = Ложь;
	позиция = 1;
	Пока позиция <= СтрДлина(текстJson) Цикл
		символ = Сред(текстJson, позиция, 1);
		Если символ <> "{" И символ <> "}" И символ <> "[" И символ <> "]" И символ <> ":" И символ <> "," И символ <> """"	Тогда
			позиция = позиция + 1;
			Продолжить;
		КонецЕсли;
		Если внутриСтроки Тогда
			Если символ = """" Тогда
				внутриСтроки = Ложь;
			КонецЕсли;
			позиция = позиция + 1;
			Продолжить;
		КонецЕсли;
		Если символ = """" Тогда
			внутриСтроки = Истина;
		КонецЕсли;
		Если не внутриСтроки Тогда
			списокИндексовГраницИРазделителя.Добавить(позиция, символ);
		КонецЕсли;
		позиция = позиция + 1;
	КонецЦикла;
	Возврат списокИндексовГраницИРазделителя;
КонецФункции

функция валидацияJSON(списокИндексов)
	результат = 0;
	внутриСтроки = Ложь;
	Для каждого элементСписка Из списокИндексов Цикл
		Если элементСписка.Представление = "{" ИЛИ элементСписка.Представление = "[" Тогда
			результат = результат + 1;
			Продолжить;
		КонецЕсли;
		Если элементСписка.Представление = "}" ИЛИ элементСписка.Представление = "]" Тогда
			результат = результат - 1;
		КонецЕсли;	
	КонецЦикла;
	Возврат результат = 0;
КонецФункции
